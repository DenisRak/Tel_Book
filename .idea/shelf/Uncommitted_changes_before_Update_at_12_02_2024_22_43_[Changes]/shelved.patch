Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\nfrom datetime import datetime\r\nclass PhoneBook:\r\n    def __init__(self, file_path: str):\r\n        \"\"\"Инициализация объекта PhoneBook.\"\"\"\r\n        self.file_path = file_path\r\n        self.contacts = self.load_data()\r\n\r\n    def load_data(self) -> list:\r\n        \"\"\"Загрузка данных из файла.\"\"\"\r\n        try:\r\n            with open(self.file_path, 'r', encoding='utf-8') as file:\r\n                return json.load(file)\r\n        except FileNotFoundError:\r\n            self.save_data([])  # Если файл не найден, создаем его\r\n            return []\r\n\r\n    def save_data(self, data: list):\r\n        \"\"\"Сохранение данных в файл.\"\"\"\r\n        with open(self.file_path, 'w', encoding='utf-8') as file:\r\n            json.dump(data, file, indent=2, ensure_ascii=False)\r\n\r\n    def display_contacts(self, page_size=5):\r\n        \"\"\"Вывод контактов на экран постранично.\"\"\"\r\n        for i, contact in enumerate(self.contacts, start=1):\r\n            print(i)\r\n            self.display_contact_details(contact)\r\n\r\n            if i % page_size == 0 or i == len(self.contacts):\r\n                input(\"Нажмите Enter для продолжения...\")\r\n\r\n\r\n    def display_contact_details(self, contact: dict):\r\n        \"\"\"Вывод подробной информации о контакте.\"\"\"\r\n        print(f\"ФИО: {contact['Фамилия']} {contact['Имя']} {contact['Отчество']}\")\r\n        print(f\"Организация: {contact['Организация']}\")\r\n        print(f\"Рабочий телефон: {contact['Рабочий телефон']}\")\r\n        print(f\"Личный телефон: {contact['Личный телефон']}\")\r\n        print(f\"Обновление: {contact.get('Обновлен', 'Не обновлялся')}\")\r\n        print()\r\n\r\n    def add_contact(self):\r\n        \"\"\" Добавление нового контакта.\r\n        - last_name (str): Фамилия.\r\n        - first_name (str): Имя.\r\n        - middle_name (str): Отчество.\r\n        - organization (str): Организация.\r\n        - work_phone (str): Рабочий телефон.\r\n        - personal_phone (str): Личный телефон.\"\"\"\r\n\r\n        last_name = input(\"Введите фамилию: \")\r\n        first_name = input(\"Введите имя: \")\r\n        middle_name = input(\"Введите отчество: \")\r\n        organization = input(\"Введите название организации: \")\r\n        work_phone = input(\"Введите рабочий телефон: \")\r\n        personal_phone = input(\"Введите личный телефон: \")\r\n        contact = {'Фамилия': last_name, 'Имя': first_name, 'Отчество': middle_name,\r\n                   'Организация': organization, 'Рабочий телефон': work_phone, 'Личный телефон': personal_phone}\r\n        self.contacts.append(contact)\r\n        self.save_data(self.contacts)\r\n        print(\"Контакт успешно добавлен.\")\r\n\r\n    @staticmethod\r\n    def get_list():\r\n        print('Список полей справочника:')\r\n        print('Фамилия', 'Имя', 'Отчество', 'Организация', 'Рабочий телефон', 'Личный телефон', sep=', ')\r\n\r\n    def edit_contact(self):\r\n        \"\"\"Редактирование информации о контакте.\"\"\"\r\n        index = int(input(f\"Введите номер контакта для редактирования не больше {len(self.contacts)}: \"))\r\n        self.get_list()\r\n        field = input(\"Введите поле из списка для редактирования: \").capitalize()\r\n        if index > len(self.contacts) or field not in self.contacts[index - 1]:\r\n            print(\"Неверный индекс или такого поля нет. Начните сначала.\")\r\n        elif 1 <= index <= len(self.contacts) and field in self.contacts[index - 1]:\r\n            new_value = input(f\"Введите новое значение для {field}: \")\r\n            self.contacts[index - 1][field] = new_value\r\n            data = datetime.now()\r\n            self.contacts[index - 1]['Обновлен'] = data.strftime('%d/%m/%Y %H:%M')\r\n            self.save_data(self.contacts)\r\n            print(\"Контакт успешно обновлен.\")\r\n\r\n    def search_contacts(self):\r\n        \"\"\"Поиск контактов по заданным критериям.\"\"\"\r\n        self.get_list()\r\n        field = input(\"Введите поле из списка для поиска: \").capitalize()\r\n        value = input(f\"Введите значение для поиска по полю {field}: \")\r\n        results = []\r\n        for contact in self.contacts:\r\n            match = contact.get(field) == value\r\n            if match:\r\n                results.append(contact)\r\n        print(\"\\nРезультаты поиска:\")\r\n        if results:\r\n            for i, contact in enumerate(results, start=1):\r\n                self.display_contact_details(contact)\r\n        else:\r\n            print('Нет данных')\r\n        input(\"Нажмите Enter для продолжения...\")\r\n\r\n\r\ndef main():\r\n    phone_book = PhoneBook(\"phone_book_data.json\")\r\n\r\n    while True:\r\n        print(\"\\nМеню телефонного справочника:\")\r\n        print(\"1. Показать контакты\")\r\n        print(\"2. Добавить контакт\")\r\n        print(\"3. Редактировать контакт\")\r\n        print(\"4. Поиск контактов\")\r\n        print(\"5. Выйти\")\r\n\r\n        choice = input(\"Введите ваш выбор (1-5): \")\r\n\r\n        if choice == \"1\":\r\n            phone_book.display_contacts()\r\n        elif choice == \"2\":\r\n            phone_book.add_contact()\r\n        elif choice == \"3\":\r\n            phone_book.edit_contact()\r\n        elif choice == \"4\":\r\n            phone_book.search_contacts()\r\n        elif choice == \"5\":\r\n            print(\"Выход из телефонного справочника. До свидания!\")\r\n            break\r\n        else:\r\n            print(\"Неверный выбор. Введите число от 1 до 5.\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision ca46a199c66b15fc8ad0b67da312538e4243a249)
+++ b/main.py	(date 1707764871744)
@@ -70,7 +70,7 @@
         index = int(input(f"Введите номер контакта для редактирования не больше {len(self.contacts)}: "))
         self.get_list()
         field = input("Введите поле из списка для редактирования: ").capitalize()
-        if index > len(self.contacts) or field not in self.contacts[index - 1]:
+        if index <= 0 or index > len(self.contacts) or field not in self.contacts[index - 1]:
             print("Неверный индекс или такого поля нет. Начните сначала.")
         elif 1 <= index <= len(self.contacts) and field in self.contacts[index - 1]:
             new_value = input(f"Введите новое значение для {field}: ")
